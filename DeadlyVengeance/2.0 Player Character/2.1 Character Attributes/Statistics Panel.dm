mob/var
 tab_saga=1
 show_players_tab=0
mob/PC/Stat()
	if(src.tab_vitals)
		statpanel("Vitals")
		if(fused)
			var/mob/PC/F
			for(var/mob/M in players)
				if(M.name!=src.fusedw) continue
				F=M
			if(chromosome!="")
				if(race=="Demon")stat("Allignment:","[F.chromosome]")
				stat("-------------","")
			if(F&&(F.scouter_eq||race=="Android"))
				stat("Location:","[F.x],[F.y],[F.z]")
				stat("-------------","")
			stat("Powerlevel:","[commaapplier(F.powerlevel)] / [commaapplier(F.powerlevel_max)]")
			stat("Ki:","[commaapplier(F.ki)] / [commaapplier(F.ki_max)]")
			stat("Strength:","[commaapplier(F.strength)] / [commaapplier(F.strength_max)]")
			stat("Defence:","[commaapplier(F.defence)] / [commaapplier(F.defence_max)]")
		else
			stat("Karma:","[src.karma]: [src.karma_rating]%")
			if(chromosome!="")
				if(race=="Demon")stat("Allignment:","[src.chromosome]")
				else stat("Gene Type:","[src.chromosome]")
				stat("-------------","")
			if(scouter_eq||race=="Android")
				stat("-------------","")
				stat("Location:","[src.x],[src.y],[src.z]")
			if(src.race == "Bio-Android"||src.race == "Majin")
				stat("Absorbs:","[src.absorb_kill]")
				stat("Player Absorbs:","[src.pabsorbs]/[round(src.pkills/5)]")
			if(src.race == "Majin") stat("Eats:","[src.eats]")
			if(src.race == "Tuffle"||src.race == "Vampire")
				stat("Infects:","[src.infect_kill]")
				stat("Player Infects:","[src.pabsorbs]/[round(src.pkills/5)]")
			stat("-------------","")
			stat("Level:","[commaapplier(src.level)]")
			stat("EXP:","[round(src.exp / src.tnl * 100)] %")
			if(src.tp > 0) stat("Training Points:","[src.tp]")
			stat("-------------","")
			if(src.afk_time>5)
				stat("Powerlevel:","[num2text(src.powerlevel)] / [num2text(src.powerlevel_max)]")
				stat("Ki:","[num2text(src.ki)] / [num2text(src.ki_max)]")
				stat("Strength:","[num2text(src.strength)] / [num2text(src.strength_max)]")
				stat("Defence:","[num2text(src.defence)] / [num2text(src.defence_max)]")
			else
				stat("Powerlevel:","[commaapplier(src.powerlevel)] / [commaapplier(src.powerlevel_max)]")
				stat("Ki:","[commaapplier(src.ki)] / [commaapplier(src.ki_max)]")
				stat("Strength:","[commaapplier(src.strength)] / [commaapplier(src.strength_max)]")
				stat("Defence:","[commaapplier(src.defence)] / [commaapplier(src.defence_max)]")
			stat("-------------","")
			stat("Fatigue:","[num2text(src.fatigue,100000)]")
			stat("Endurance:","[num2text(src.fatigue_max,100000)]")
			stat("-------------","")
			stat("Time Played:","[Hrs] Hours, [Mins] Minutes")
			stat("Energy Code:","[num2text(src.energy_code,100000)]")
			stat("Rage:","[src.rage] %")
			stat("Earth Wishes:","[src.wishes]/5")
			stat("Namek Wishes:","[src.namek_wishes]/3")
			stat("Black Star Wishes:","[src.bs_wishes]/3")
			stat("All Star Wishes:","[src.as_wishes]/2")
	if(src.tab_skills)
		statpanel("Statistics")
		stat("Unarmed:","[round((src.unarmed / max(src.unarmed_max,1)) * 100)] %")
		stat("Ki:","[round((src.ki_skill / src.ki_skill_max) * 100)] %")
		stat("-------------","")
		stat("Chance to Block:","[src.block] %")
		stat("Chance to Counter:","[src.counter] %")
		stat("Chance to Dodge:","[src.dodge] %")
		stat("Chance to Reflect:","[src.reflect] %")
		stat("Chance to Critical:","[src.critical] %")
		stat("-------------","")
		stat("Tutorial:","[src.Tutorial]")
		stat("Tournament:", "[src.tournywin]/[maxwins]")
		if(guild_leader) stat("Guild War Points:","[src.guildp]/[src.warswon]")
		stat("Total Kills:","[src.kills+src.pkills]")
		stat("NPC Kills:","[src.kills]")
		stat("Player Kills:","[src.pkills]")
		stat("KillStreak:","[src.killstreak]")
		stat("Deaths:","[src.deaths]")
		if(pkills&&deaths) stat("K/D:","[round(src.pkills/src.deaths,0.01)]")
		stat("Highest KillStreak:","[src.highestks]")
		stat("Highest Multi-Kill:","[src.highestmulti]")
		stat("Arena Victories:","[src.arena_wins]")
		stat("Arena Casualties:","[src.arena_losses]")
		stat("Attacks Absorbed:","[src.gooda]")
		stat("-------------","")
		stat("Training Type","Levels Gained")
		stat("Self Training:","[src.whatLevels["Self"]]")
		stat("Dual Training:","[src.whatLevels["Dual"]]")
		stat("Dummy Training:","[src.whatLevels["Dummy"]]")
		stat("MedPad Training:","[src.whatLevels["MedPad"]]")
		stat("Combat Training:","[src.whatLevels["Combat"]]")
		stat("Dragonball Training:","[src.whatLevels["Dragonballs"]]")
		stat("Misc Training:","[src.whatLevels["Normal"]]")
	if(src.tab_quests)
		statpanel("Quests")
		for(var/obj/Quests/O in contents)
			stat("")
			stat(O)
	if(src.tab_saga)
		statpanel("Saga")
		stat("Saga:","[saga]")
		stat("Sub-Saga:","[part]")
		stat("Location:","[location]")
		stat("Difficulty:","[saga_difficulty]")
		stat("-------------","")
		for(var/mob/Saga/M in sagas)
			stat(M)
			if(src.afk_time>3)
				stat("Powerlevel:","[num2text(M.powerlevel)]")
				stat("Ki:","[num2text(M.ki)]")
				stat("Strength:","[num2text(M.strength)]")
				stat("Defence:","[num2text(M.defence)]")
			else
				stat("Powerlevel:","[commaapplier(M.powerlevel)]")
				stat("Ki:","[commaapplier(M.ki)]")
				stat("Strength:","[commaapplier(M.strength)]")
				stat("Defence:","[commaapplier(M.defence)]")
			stat("Location:","[M.x],[M.y],[M.z]")
	if(src.tab_inventory)
		statpanel("Inventory")
		stat("Weapon",src.weapon)
		stat("Head:",src.head)
		stat("Back:",src.back)
		stat("Chest:",src.chest)
		stat("Underclothing:",src.underclothes)
		stat("Arms:",src.arms)
		stat("Hands:",src.hands)
		stat("Waist:",src.waist)
		stat("Legs:",src.legs)
		stat("Feet:",src.feet)
		stat("-------------","")
		var/count = 0
		for(var/obj/O in contents)
			if(istype(O,/obj/Quests/)) continue
			if(istypemulti(O,/obj/Equipment/,/obj/Dragonballs/,/obj/Guild/,/obj/Gym/)){ stat(O); count++; }
		src.inven_min = count
		stat("-------------","")
		stat("Zenni:","[src.zenni]")
		if(src.banked_zenni) stat("Banked Zenni:","[src.banked_zenni]")
		stat("Space:","[src.inven_min] / [src.inven_max]")
	if(src.in_guild)
		var/guildmembercount=0
		if(src.show_guild_tab)
			statpanel("Guild Members")
			for(var/mob/PC/M in players)
				if(M.guild_name != src.guild_name) continue
				if(!M.hidden)
					guildmembercount++
					stat(M)
					if(src.afk_time>3) stat("Level:","[num2text(M.level)]")
					else stat("Level:","[commaapplier(M.level)]")
					stat("Race:","[M.race]")
					stat("Rank:","[M.guild_rank]")
					stat("Guild Battle Rank","[M.guildbrank]")
					stat("","")
		if(guildmembercount>=10&&src.guild_leader)
			var/hasmedal = world.GetMedal("Mr/Miss Popular",src)
			if(!hasmedal)
				GiveMedal("Mr/Miss Popular",src)
				players<<"<font color=gray>[world.name] Medal Information: <font color=white>[src] has earned the medal 'Mr/Miss Popular'."
	if(src.show_players_tab)
		statpanel("Players")
		stat("Online:","[players.len]")
		for(var/mob/PC/M in players)
			if(!M.hidden)
				stat("","")
				stat(M)
				stat("Key:","[M.key]")
				if(src.afk_time>3) stat("Level:","[num2text(M.level)]")
				else stat("Level:","[commaapplier(M.level)]")
				stat("Race:","[M.race]")
	if(src.show_friends_tab)
		statpanel("Friends")
		var/friendcount=0
		for(var/mob/M in players) if(friends.Find(M.key)) if(!M.hidden) friendcount++
		stat("Online:","[friendcount] / [src.friends.len]")
		for(var/mob/PC/M in players) if(friends.Find(M.key)) if(!M.hidden)
			stat(M)
			stat("Key:","[M.key]")